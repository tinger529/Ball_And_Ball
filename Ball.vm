function Ball.new 0
push constant 10
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 0
push argument 1
pop this 1
push argument 2
pop this 2
push argument 3
pop this 7
push argument 4
pop this 8
push constant 1
push argument 2
add
pop this 3
push constant 511
push argument 2
sub
pop this 4
push constant 1
push argument 2
add
pop this 5
push constant 236
push argument 2
sub
pop this 6
push constant 0
pop this 9
push pointer 0
call Ball.show 1
pop temp 0
push pointer 0
return
function Ball.setv 0
push argument 0
pop pointer 0
push this 7
push argument 1
call Math.multiply 2
pop this 7
push this 8
push argument 1
call Math.multiply 2
pop this 8
push constant 0
return
function Ball.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Ball.show 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.hide 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Ball.draw 1
pop temp 0
push constant 0
return
function Ball.draw 0
push argument 0
pop pointer 0
push this 0
push this 1
push this 2
call Screen.drawCircle 3
pop temp 0
push constant 0
return
function Ball.getLeft 0
push argument 0
pop pointer 0
push this 0
push this 2
sub
return
function Ball.getRight 0
push argument 0
pop pointer 0
push this 0
push this 2
add
return
function Ball.getY 0
push argument 0
pop pointer 0
push this 1
push this 2
add
return
function Ball.move 0
push argument 0
pop pointer 0
push pointer 0
call Ball.hide 1
pop temp 0
push this 0
push this 7
add
pop this 0
push this 0
push this 2
push constant 1
add
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 2
push constant 1
add
pop this 0
label IF_FALSE0
push this 0
push constant 511
push this 2
sub
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 511
push this 2
sub
pop this 0
label IF_FALSE1
push this 1
push this 8
add
pop this 1
push this 1
push this 2
push constant 1
add
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
push constant 1
add
pop this 1
label IF_FALSE2
push this 1
push constant 236
push this 2
sub
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 236
push this 2
sub
pop this 1
label IF_FALSE3
push pointer 0
call Ball.show 1
pop temp 0
push constant 0
return
function Ball.bounce 0
push argument 0
pop pointer 0
push this 0
push this 3
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 1
neg
push this 7
call Math.multiply 2
pop this 7
label IF_FALSE0
push this 0
push this 4
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
neg
push this 7
call Math.multiply 2
pop this 7
label IF_FALSE1
push this 1
push this 5
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
neg
push this 8
call Math.multiply 2
pop this 8
label IF_FALSE2
push this 1
push this 6
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
neg
push this 8
call Math.multiply 2
pop this 8
label IF_FALSE3
push constant 0
return
